#!/usr/bin/env python2

'''
See emcc.py. This script forwards to there, noting that we want C++ and not C by default
'''

import os, subprocess, sys
from tools import shared

args = [
    '-fblocks',
    '-s', 'DEMANGLE_SUPPORT=1',
    '-s', 'ERROR_ON_UNDEFINED_SYMBOLS=0',
    '-s', 'USE_ZLIB=1',
    '-s', 'ALIASING_FUNCTION_POINTERS=0',
    '-s', 'EMULATED_FUNCTION_POINTERS=1',
    '-s', 'DISABLE_EXCEPTION_CATCHING=0',
    '-s', 'STB_IMAGE=1',
    '-D__IPHONE_OS_VERSION_MIN_REQUIRED=70000',
    '-D_BSD_SOURCE',
    '-fmodules',
    '-fmodule-map-file='+os.environ['EMSCRIPTEN']+'/system/module.modulemap',
    '-fmodules-cache-path='+os.environ['EMSCRIPTEN']+'/.modulecache',
    '-Werror=incomplete-umbrella',
    '-Wno-module-import-in-extern-c',
    '-Wno-ambiguous-macro',
    '-fmodules-prune-interval=60',
    '-fmodules-prune-after=60',
    '-Wnon-modular-include-in-framework-module',
]

if not "SIDE_MODULE=1" in sys.argv:
    args += [
        '-lbsd',
        '-lobjc4',
        '-lBlocksRuntime',
        '-ldispatch'
    ]

args += sys.argv[1:]

exit(subprocess.call([shared.PYTHON, shared.EMCC] + args))
